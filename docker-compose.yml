services:
  mongo:
    image: mongo:6
    container_name: teamtask-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-teamtask_secure_password_2025}
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # Uncomment for development/debugging
    # ports:
    #   - "27017:27017"

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: teamtask-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-teamtask_secure_password_2025}@mongo:27017/teamtask?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-teamtask_jwt_secret_key_very_long_and_secure_change_this_in_production}
      - PORT=5000
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: teamtask-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo-data:
    driver: local

networks:
  app-network:
    driver: bridge
